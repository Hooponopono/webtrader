{"version":3,"sources":["../../../../src/charts/chartSettings.es6"],"names":["COMMON_LINE_STYLE","VERTICAL_LINE_STYLE","HORIZONTAL_LINE_STYLE","SPOT_STYLE","CHART_LABEL_ELS","purchase_time","i18n","start_time","barrier","barrier_dotted","end_time","entry_spot","exit_spot","getLabelEl","labels","label_el","label","getMarkerSettings","fillColor","lineColor","lineWidth","radius","states","hover","getChartLabels","proposal_open_contract","tick_count","date_start","is_sold_before_expiry","is_path_dependent","contract_type","chart_labels","tick_labels","getTickLabels","filter","unshift","tick_chart_labels","includes"],"mappings":";;;;;;AAAA;AACA,QAAMA,oBAAoB,sDAA1B;AACA,QAAMC,sBAAyBD,iBAAzB,6FAAN;AACA,QAAME,wBAA2BF,iBAA3B,0FAAN;AACA,QAAMG,aAAa,oEAAnB;;AAEA,QAAMC,kBAAkB;AACpBC,yCAA+BJ,mBAA/B,6DAA0G,gBAAgBK,IAAhB,EADtF;AAEpBC,sCAA4BN,mBAA5B,uCAAiF,aAAaK,IAAb,EAF7D;AAGpBE,mCAAyBN,qBAAzB,uCAAgF,UAAUI,IAAV,EAH5D;AAIpBG,0CAAgCP,qBAAhC,wCAAwF,UAAUI,IAAV,EAJpE;AAKpBI,oCAA0BT,mBAA1B,wCAAgF,WAAWK,IAAX,EAL5D;AAMpBK,sCAA4BR,UAA5B,oEAAqG,aAAaG,IAAb,EANjF;AAOpBM,qCAA2BT,UAA3B,qEAAqG,YAAYG,IAAZ;AAPjF,KAAxB;;AAUA,QAAMO,aAAa,SAAbA,UAAa,CAACC,MAAD,EAAY;AAC3B,YAAIC,WAAW,EAAf;AAD2B;AAAA;AAAA;;AAAA;AAE3B,iCAAoBD,MAApB,8HAA4B;AAAA,oBAAjBE,KAAiB;;AACxB,oBAAIA,SAASZ,gBAAgBY,KAAhB,CAAb,EAAqC;AACjCD,gCAAYX,gBAAgBY,KAAhB,CAAZ;AACH;AACJ;AAN0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAO3B,yBAAeD,QAAf;AACH,KARD;;AAUA,QAAME,oBAAoB,SAApBA,iBAAoB,GAAyB;AAAA,YAAxBC,SAAwB,uEAAZ,OAAY;;AAC/C,eAAO,EAAEA,oBAAF,EAAaC,WAAW,QAAxB,EAAkCC,WAAW,CAA7C,EAAgDC,QAAQ,CAAxD,EAA2DC,QAAQ,EAAEC,OAAO,EAAEL,oBAAF,EAAaC,WAAW,QAAxB,EAAkCC,WAAW,CAA7C,EAAgDC,QAAQ,CAAxD,EAAT,EAAnE,EAAP;AACH,KAFD;;AAIA,QAAMG,iBAAiB,SAAjBA,cAAiB,CAACC,sBAAD,EAA4B;AAAA,YACvCC,UADuC,GAC4DD,sBAD5D,CACvCC,UADuC;AAAA,YAC3BC,UAD2B,GAC4DF,sBAD5D,CAC3BE,UAD2B;AAAA,YACftB,aADe,GAC4DoB,sBAD5D,CACfpB,aADe;AAAA,YACAuB,qBADA,GAC4DH,sBAD5D,CACAG,qBADA;AAAA,YACuBC,iBADvB,GAC4DJ,sBAD5D,CACuBI,iBADvB;AAAA,YAC0CC,aAD1C,GAC4DL,sBAD5D,CAC0CK,aAD1C;;AAE/C,YAAIC,eAAe,CAAC,YAAD,EAAe,YAAf,EAA6B,gBAA7B,EAA+C,WAA/C,EAA4D,UAA5D,CAAnB;;AAEA,YAAIL,UAAJ,EAAgB;AACZ,gBAAIM,cAAcC,cAAcH,aAAd,CAAlB;AACA,mBAAOE,WAAP;AACH;;AAED,YAAIJ,yBAAyB,CAACC,iBAA9B,EAAiDE,eAAeA,aAAaG,MAAb,CAAoB,UAAClB,KAAD;AAAA,mBAAWA,UAAU,WAArB;AAAA,SAApB,CAAf;AACjD,YAAIW,aAAatB,aAAjB,EAAgC0B,aAAaI,OAAb,CAAqB,eAArB;;AAEhC,eAAOJ,YAAP;AACH,KAbD;;AAeA,QAAME,gBAAgB,SAAhBA,aAAgB,CAACH,aAAD,EAAmB;AACrC,YAAIM,oBAAoB,CAAC,YAAD,EAAe,SAAf,EAA0B,UAA1B,CAAxB;AACA,YAAIN,cAAcO,QAAd,CAAuB,OAAvB,CAAJ,EAAqCD,oBAAoBA,kBAAkBF,MAAlB,CAAyB,UAAClB,KAAD;AAAA,mBAAWA,UAAU,SAArB;AAAA,SAAzB,CAApB;AACrC,eAAOoB,iBAAP;AACH,KAJD;;YAMSvB,U,GAAAA,U;YAAYI,iB,GAAAA,iB;YAAmBO,c,GAAAA,c","file":"chartSettings.js","sourcesContent":["// TODO: move chartoptions here -- getChartOptions: () => chart_options,\nconst COMMON_LINE_STYLE = 'margin-left: 10px; border: 0; display: inline-block;';\nconst VERTICAL_LINE_STYLE = `${COMMON_LINE_STYLE} margin-bottom: -3px; height: 15px; width: 5px; border-left: 2px; border-color: #e98024;`;\nconst HORIZONTAL_LINE_STYLE = `${COMMON_LINE_STYLE} margin-bottom: 3px; height: 2; width: 20px; border-bottom: 2px; border-color: green;`;\nconst SPOT_STYLE = 'margin: 3px 5px 0 10px; display: inline-block; border-radius: 6px;';\n\nconst CHART_LABEL_ELS = {\n    purchase_time: `<span style=\"${VERTICAL_LINE_STYLE} border-color: #7cb5ec; border-style: solid;\"></span>${'Purchase Time'.i18n()}`,\n    start_time: `<span style=\"${VERTICAL_LINE_STYLE} border-style: solid;\"></span> ${'Start Time'.i18n()}`,\n    barrier: `<span style=\"${HORIZONTAL_LINE_STYLE} border-style: solid;\"></span> ${'Barrier'.i18n()}`,\n    barrier_dotted: `<span style=\"${HORIZONTAL_LINE_STYLE} border-style: dotted;\"></span> ${'Barrier'.i18n()}`,\n    end_time: `<span style=\"${VERTICAL_LINE_STYLE} border-style: dashed;\"></span> ${'End Time'.i18n()}`,\n    entry_spot: `<span style=\"${SPOT_STYLE} border: 3px solid orange; width: 4px; height: 4px;\"></span>${'Entry Spot'.i18n()}`,\n    exit_spot: `<span style=\"${SPOT_STYLE} background-color: orange; width:10px; height: 10px;\"></span>${'Exit Spot'.i18n()}`,\n};\n\nconst getLabelEl = (labels) => {\n    let label_el = '';\n    for (const label of labels) {\n        if (label && CHART_LABEL_ELS[label]) {\n            label_el += CHART_LABEL_ELS[label];\n        }\n    }\n    return `<div>${label_el}</div>`;\n};\n\nconst getMarkerSettings = (fillColor = 'white') => {\n    return { fillColor, lineColor: 'orange', lineWidth: 3, radius: 4, states: { hover: { fillColor, lineColor: 'orange', lineWidth: 3, radius: 4 }}};\n};\n\nconst getChartLabels = (proposal_open_contract) => {\n    const { tick_count, date_start, purchase_time, is_sold_before_expiry, is_path_dependent, contract_type } = proposal_open_contract;\n    let chart_labels = ['start_time', 'entry_spot', 'barrier_dotted', 'exit_spot', 'end_time'];\n\n    if (tick_count) {\n        let tick_labels = getTickLabels(contract_type);\n        return tick_labels;\n    }\n\n    if (is_sold_before_expiry && !is_path_dependent) chart_labels = chart_labels.filter((label) => label !== 'exit_spot');\n    if (date_start > purchase_time) chart_labels.unshift('purchase_time');\n\n    return chart_labels;\n};\n\nconst getTickLabels = (contract_type) => {\n    let tick_chart_labels = ['start_time', 'barrier', 'end_time'];\n    if (contract_type.includes('DIGIT')) tick_chart_labels = tick_chart_labels.filter((label) => label !== 'barrier');\n    return tick_chart_labels;\n}\n\nexport { getLabelEl, getMarkerSettings, getChartLabels };"]}